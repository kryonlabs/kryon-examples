# TabBar Bottom Position Demo  
# Demonstrates TabBar component with bottom navigation layout

@include "widgets/tabbar.kry"

style "app_container" {
    background_color: "#191919FF"
    text_color: "#FFFFFFFF"
    layout: column start
}

style "content_area" {
    background_color: "#1E1E1EFF"
    text_color: "#FFFFFFFF"
    layout: absolute
    text_alignment: center
    width: 900
    height: 550
}

App {
    window_width: 900
    window_height: 600
    window_title: "TabBar Bottom Demo"
    style: "app_container"

    # Main content area with switchable content
    Container {
        style: "content_area"
        
        # Tab content panels with absolute positioning (all stacked at same position)
        Container {
            id: "home_content"
            style: "tab_content"
            layout: absolute
            pos_x: 0
            pos_y: 0
            visible: true
            
            Text {
                text: "Home Page\n\nWelcome to the home section!\nThis content is displayed when the Home tab is active."
                text_alignment: center
            }
        }
        
        Container {
            id: "profile_content"
            style: "tab_content"
            layout: absolute
            pos_x: 0
            pos_y: 0
            visible: false
            
            Text {
                text: "Profile Page\n\nUser profile information goes here.\nThis content shows when Profile tab is selected."
                text_alignment: center
            }
        }
        
        Container {
            id: "settings_content"
            style: "tab_content"
            layout: absolute
            pos_x: 0
            pos_y: 0
            visible: false
            
            Text {
                text: "Settings Page\n\nApplication settings and preferences.\nThis content appears when Settings tab is clicked."
                text_alignment: center
            }
        }
    }

    # Bottom navigation using TabBar widget
    TabBar {
        position: "bottom"
    }
}

@script "lua" {
    -- Initialize tab system with content panels
    function init_demo()
        setup_tab_handlers(
            {"tab_home", "tab_profile", "tab_settings"},
            {"home_content", "profile_content", "settings_content"}
        )
    end
    
    -- Call initialization
    init_demo()
}